{"name":"populatejs","tagline":"html, css, javascript, dry","body":"Populatejs is a drop-in Javascript library helping you \"Don't Repeat Yourself\" when doing markup.\r\n\r\nWherever you need to duplicate DOM elements in HTML to test how the layout is working with a greater number of items,\r\nPopulateJS comes and does such boring work for you using it's compact, elegant and functional CSS API.\r\nAnd your HTML markup is ready for making templates for real CMS...\r\n\r\nMotivation\r\n----------\r\nFor example, you need to create the category page for e-shop. There are many article items on it...\r\nAt first you're creating markup and CSS for only one item and then you're populating HTML structure\r\nif you haven't got ready CMS setup or template engine.\r\n```html\r\n    <div class=\"item\">\r\n        <div class=\"thumb\">\r\n            <img src=\"test_thumb.jpg\" />\r\n        </div>\r\n        <div class=\"title\">\r\n            Some cool stuff. Lorem ipsum\r\n        </div>\r\n        <div class=\"description\">\r\n            Lorem ipsum...\r\n        </div>\r\n        <div class=\"price\">\r\n            $<em>14</em><span>99</span>\r\n        </div>\r\n    </div>\r\n```\r\n\r\nTo avoid copypasting such huge snippet just try how it will work with Populate JS!\r\n\r\nHow to use\r\n----------\r\nDrop following code snippet into your HTML page\r\n```html\r\n<script type=\"text/javascript\" src=\"https://raw.github.com/vladignatyev/populate-js/master/js/populate.js\"></script>\r\n```\r\nAnd you're ready! \r\nTo populate category page with items just add ```populate-10``` CSS class to ```<div class=\"item\">``` and you'll get 10 items on your page.\r\n\r\nNeed more? Populate inner content with ```populate-inner-5``` where 5 is any number.\r\nYou may combine it to populate the page with fake content not affecting your clean HTML markup.\r\nWhen you've done, just replace ```populate.js``` string from your HTML and it will be ready to create templates and so forth.\r\n\r\nWhat's inside?\r\n-------------\r\nThis microlibrary was written completely test-driven using outstanding [QUnit js unit testing framework](http://qunitjs.com/).\r\nTo run tests just open ```tests.html``` in your favorite browser.\r\n\r\nAt a glance, populatejs does traversing DOM tree on document ready event and clone DOM-nodes you've choosen in efficient and usable manner.\r\n\r\nContributing guide\r\n------------------\r\nYou're welcome to create tickets for feature requests on additional CSS sugar and to pull new features.\r\nUse TDD to keep your code marvellous! \r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}